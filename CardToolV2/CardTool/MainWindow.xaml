<Window x:Class="CardTool.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:self="clr-namespace:CardTool"
        xmlns:Converter="clr-namespace:CardTool.Helpers"
        Title="The Expirables - Card Tool" 
        WindowStartupLocation="CenterScreen"
        Closing="DataWindow_Closing"
        ResizeMode="CanMinimize"
        Width="850" Height="600"  MinWidth="800" MinHeight="600" Icon="Ressources/logo.ico">

    <!-- Resources -->
    <Window.Resources>

        <Converter:ImageSourceConverter x:Key="ImageSourceConverter"/>

        <!-- ObjectDataProvider for enums -->
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="SfxDataProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="self:SfxType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="CategoryDataProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="self:Category" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="EffectDataProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="self:CardEffect" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <!-- Error display -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="true">
                            <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white">
                                </TextBlock>
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                <Border BorderBrush="red" BorderThickness="1" />
                            </AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Data template for arrow ListView sorting-->
        <DataTemplate x:Key="HeaderTemplateArrowUp">
            <DockPanel>
                <TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
                <Path x:Name="arrow"
                StrokeThickness = "2"
                Fill            = "Orange"
                Data            = "M 5,10 L 15,10 L 10,5 L 5,10"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="HeaderTemplateArrowDown">
            <DockPanel>
                <TextBlock HorizontalAlignment="Center" Text="{Binding}"/>
                <Path x:Name="arrow"
                StrokeThickness = "2"
                Fill            = "Orange"
                Data            = "M 5,5 L 10,10 L 15,5 L 5,5"/>
            </DockPanel>
        </DataTemplate>

    </Window.Resources>

    

    <!-- Binding commands -->
    <Window.CommandBindings>
        
        <!-- WPF Override Commands -->
        <CommandBinding Command="Open" CanExecute="OpenCommand_CanExecute" Executed="OpenCommand_Executed" />
        <CommandBinding Command="Save" CanExecute="SaveCommand_CanExecute" Executed="SaveCommand_Executed" />
        
            
        <!-- Custom commands -->
        <CommandBinding Command="self:CustomCommands.Exit" CanExecute="ExitCommand_CanExecute" Executed="ExitCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.AddCard" CanExecute="AddCardCommand_CanExecute" Executed="AddCardCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.EditCard" CanExecute="EditCardCommand_CanExecute" Executed="EditCardCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.DeleteCard" CanExecute="DeleteCardCommand_CanExecute" Executed="DeleteCardCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.ClearDeck" CanExecute="ClearDeckCommand_CanExecute" Executed="ClearDeckCommand_Executed" />
        <CommandBinding Command="self:CustomCommands.AddImage" CanExecute="AddImageCommand_CanExecute" Executed="AddImageCommand_Executed" />

    </Window.CommandBindings>

    <!--
    <UserControl.Resources>
        <converters:ImageSourceConverter x:Key="ImageSourceConverter" />
    </UserControl.Resources> -->

    

    <!-- Window content -->
    <Grid>
        <DockPanel>

            <!-- Toolbar -->
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="{Binding UITranslation.MenuFile}"> <!-- Test for external translation -->
                    <MenuItem Header="{Binding UITranslation.MenuItemOpen}" Command="Open"/>
                    <MenuItem Header="{Binding UITranslation.MenuItemSave}" Command="Save"/>
                    <MenuItem Header="{Binding UITranslation.MenuItemExit}" Command="self:CustomCommands.Exit"/>
                </MenuItem>
                <MenuItem Header="Edition">
					<MenuItem Header="Vider le deck" Command="self:CustomCommands.ClearDeck" />
				</MenuItem>
            </Menu>

            <!-- Card list -->
            <ListView DockPanel.Dock="Left" Margin="10" Width="300" Name="CardDeck" PreviewMouseLeftButtonUp="CardCollection_SelectionChanged" 
                      ItemsSource="{Binding Path=CardCollection, UpdateSourceTrigger=PropertyChanged}"
                      GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler">
                <ListView.View>
                    <GridView>
                        <!--<GridViewColumn Header="G.Id" Width="40"  DisplayMemberBinding="{Binding Path=CardGlobalId}" />-->
                        <GridViewColumn Header="Titre" Width="130" DisplayMemberBinding="{Binding Path=CardTitle}" />
                        <GridViewColumn Header="Catégorie" Width="130" DisplayMemberBinding="{Binding Path=CardCategory}" />
                    </GridView>
                </ListView.View>

            </ListView>

            <!-- Action buttons -->
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Center">

                <Button Margin="10" Padding="5" Content="Ajouter" Command="self:CustomCommands.AddCard" />
                <Button Margin="10" Padding="5" Content="Editer" Command="self:CustomCommands.EditCard"/>
                <Button Margin="10" Padding="5" Content="Supprimer" Command="self:CustomCommands.DeleteCard"/>
                <!--<Button Margin="10" Padding="5" Content="Debug" Click="Debug_Click"/>-->
                
            </StackPanel>

            <Grid DockPanel.Dock="Right" Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="200" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>

                <!-- 1st column -->
                <Label Grid.Row="0" Grid.Column="0" Content="Titre :" />
                <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Validation.Error="Validation_Error" Name="TitleField"
                         Text="{Binding Path=CurrentCard.CardTitle, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true, NotifyOnValidationError=true}"/>

                <Label Grid.Row="1" Grid.Column="0" Content="Coût :" />
                <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Validation.Error="Validation_Error" Name="CostField"
                         Text="{Binding Path=CurrentCard.CardCost, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=true}"/>

                <Label Grid.Row="2" Grid.Column="0" Content="Catégorie :" />
                <ComboBox Grid.Row="2" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={StaticResource CategoryDataProvider}}"  SelectedItem="{Binding Path=CurrentCard.CardCategory}" Name="CategoryField" />

                <!-- 2nd column -->
                <!--<Label Grid.Row="0" Grid.Column="3" Content="Unique ID :"/>
                <TextBox Grid.Row="0" Grid.Column="4" Margin="3" Validation.Error="Validation_Error" Name="IdField"
                         Text="{Binding Path=CurrentCard.CardUniqueId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=true}"  />-->

                <Label Grid.Row="1" Grid.Column="3" Content="Global ID :"/>
                <TextBox Grid.Row="1" Grid.Column="4" Margin="3" Validation.Error="Validation_Error"
                         Text="{Binding Path=CurrentCard.CardGlobalId, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=true}"  />

                <Label Grid.Row="2" Grid.Column="3" Content="SFX :"/>
                <ComboBox Grid.Row="2" Grid.Column="4" Margin="3" ItemsSource="{Binding Source={StaticResource SfxDataProvider}}"  SelectedItem="{Binding Path=CurrentCard.CardSfx}" Name="SfxField" />

                <!-- Effects -->
                <!--<Label Grid.Row="4" Grid.Column="0" Content="Effet 1 :" Grid.RowSpan="2"/>
                <ComboBox Grid.Row="4" Grid.Column="1" Margin="3" ItemsSource="{Binding Source={StaticResource EffectDataProvider}}"  SelectedItem="{Binding Path=CurrentCard.CardEffect_1}" />
                <Label Grid.Row="4" Grid.Column="3" Content="Effet 2 :" Grid.RowSpan="2"/>
                <ComboBox Grid.Row="4" Grid.Column="4" Margin="3" ItemsSource="{Binding Source={StaticResource EffectDataProvider}}"  SelectedItem="{Binding Path=CurrentCard.CardEffect_2}" />
                -->
                
                <!-- Description -->
                <Label Grid.Row="6" Grid.Column="0" Content="Description :" />
                <TextBox Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3" Margin="3" AcceptsReturn="True" Name="DescriptionField"
                         TextWrapping="Wrap" SpellCheck.IsEnabled="true" Language="fr-FR"
                         Text="{Binding Path=CurrentCard.CardDescription}"/>

                <!-- Picture -->
                <Button Grid.Row="6" Grid.Column="4" Grid.ColumnSpan="2" Margin="5" Command="self:CustomCommands.AddImage">
                    <StackPanel>
                        <!--<Image Source="Ressources/default_img.png" Stretch="Fill" /> -->
                        <Image Source="{Binding Path=CurrentCard.CardImagePath, Converter={StaticResource ImageSourceConverter}}" Stretch="Fill" />
                    </StackPanel>
                </Button>

            </Grid>

        </DockPanel>
    </Grid>

</Window>
